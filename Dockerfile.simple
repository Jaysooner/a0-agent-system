# Use the pre-built base image for A0
FROM agent0ai/agent-zero-base:latest

# Set BRANCH to "local" if not provided
ARG BRANCH=local
ENV BRANCH=$BRANCH

# Copy filesystem files to root
COPY ./docker/run/fs/ /
# Copy current development files to git
COPY ./ /git/agent-zero

# pre installation steps
RUN bash /ins/pre_install.sh $BRANCH

# install A0
RUN bash /ins/install_A0.sh $BRANCH

# install additional software
RUN bash /ins/install_additional.sh $BRANCH

# Set up API key loading script
RUN echo '#!/bin/bash' > /exe/load_api_keys.sh && \
    echo 'echo "Loading API keys from environment variables..."' >> /exe/load_api_keys.sh && \
    echo 'if [ ! -f /git/agent-zero/.env ]; then' >> /exe/load_api_keys.sh && \
    echo '    touch /git/agent-zero/.env' >> /exe/load_api_keys.sh && \
    echo 'fi' >> /exe/load_api_keys.sh && \
    echo 'for var in $(env | grep -E "^[A-Z_]+_API_KEY="); do' >> /exe/load_api_keys.sh && \
    echo '    key=$(echo "$var" | cut -d= -f1)' >> /exe/load_api_keys.sh && \
    echo '    value=$(echo "$var" | cut -d= -f2-)' >> /exe/load_api_keys.sh && \
    echo '    echo "$key=$value" >> /git/agent-zero/.env' >> /exe/load_api_keys.sh && \
    echo 'done' >> /exe/load_api_keys.sh && \
    echo 'for var in $(env | grep -E "^AGENTMAIL_"); do' >> /exe/load_api_keys.sh && \
    echo '    key=$(echo "$var" | cut -d= -f1)' >> /exe/load_api_keys.sh && \
    echo '    value=$(echo "$var" | cut -d= -f2-)' >> /exe/load_api_keys.sh && \
    echo '    echo "$key=$value" >> /git/agent-zero/.env' >> /exe/load_api_keys.sh && \
    echo 'done' >> /exe/load_api_keys.sh && \
    echo 'for var in $(env | grep -E "^ANTHROPIC_"); do' >> /exe/load_api_keys.sh && \
    echo '    key=$(echo "$var" | cut -d= -f1)' >> /exe/load_api_keys.sh && \
    echo '    value=$(echo "$var" | cut -d= -f2-)' >> /exe/load_api_keys.sh && \
    echo '    echo "$key=$value" >> /git/agent-zero/.env' >> /exe/load_api_keys.sh && \
    echo 'done' >> /exe/load_api_keys.sh && \
    echo 'echo "API keys loaded successfully"' >> /exe/load_api_keys.sh && \
    chmod +x /exe/load_api_keys.sh

# cleanup repo and install A0 without caching
ARG CACHE_DATE=none
RUN echo "cache buster $CACHE_DATE" && bash /ins/install_A02.sh $BRANCH

# post installation steps
RUN bash /ins/post_install.sh $BRANCH

# Expose ports
EXPOSE 22 80 9000-9009

RUN chmod +x /exe/initialize.sh /exe/run_A0.sh /exe/run_searxng.sh /exe/run_tunnel_api.sh

# Load API keys and initialize runtime
CMD ["/bin/bash", "-c", "/exe/load_api_keys.sh && /exe/initialize.sh $BRANCH"]
